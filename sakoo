#!/bin/bash

APP_SERVICE='sakoo.app'

WHITE='\033[1;37m'
NC='\033[0m'

if [ "$(uname -s)" != "Linux" ] && [ "$(uname -s)" != "Darwin" ]; then
  echo "Unsupported operating system [$(uname -s)]" >&2
  exit 1
fi

if ! [ -x "$(command -v docker-compose)" ]; then
  shopt -s expand_aliases
  alias docker-compose='docker compose'
fi

if [ -f ./.env ]; then
  source ./.env
fi

export APP_PORT=${APP_PORT:-80}
export DB_PORT=${DB_PORT:-3306}

if ! docker info >/dev/null 2>&1; then
  echo -e "${WHITE}Docker is not running.${NC}" >&2
  exit 1
fi

function service_is_not_running {
  echo -e "${WHITE}Sakoo is not running.${NC}" >&2
  echo -e "${WHITE}You may Sakoo using the following command:${NC} 'make up'" >&2
  exit 1
}

function check_service_is_up {
  if [ -z "$(docker-compose ps -q)" ]; then
    service_is_not_running
  fi
}

if docker-compose ps | grep $APP_SERVICE | grep 'Exit'; then
  echo -e "${WHITE}Shutting down old Sakoo processes...${NC}" >&2
  docker-compose down >/dev/null 2>&1
  service_is_not_running
fi

if [ $# -gt 0 ]; then
  if [ "$1" == "php" ]; then
    check_service_is_up
    shift 1
    docker-compose exec "$APP_SERVICE" php "$@"
    elif [ "$1" == "assist" ]; then
    check_service_is_up
    shift 1
    docker-compose exec "$APP_SERVICE" php ./core/src/Console/Assistant.php "$@"
  elif [ "$1" == "composer" ]; then
    check_service_is_up
    shift 1
    docker-compose exec "$APP_SERVICE" composer "$@"
  elif [ "$1" == "test" ]; then
    check_service_is_up
    shift 1
    docker-compose exec "$APP_SERVICE" php vendor/bin/phpunit "$@"
  elif [ "$1" == "npm" ]; then
    check_service_is_up
    shift 1
    docker-compose exec "$APP_SERVICE" npm "$@"
  elif [ "$1" == "mysql" ]; then
    check_service_is_up
    shift 1
    docker-compose exec mysql bash -c 'mysql ${DB_USER} -p ${DB_PASSWORD} ${DB_DATABASE}'
  elif [ "$1" == "shell" ]; then
    check_service_is_up
    shift 1
    docker-compose exec "$APP_SERVICE" bash "$@"
  else
    docker-compose "$@"
  fi
else
  docker-compose ps
fi
